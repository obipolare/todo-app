{"version":3,"sources":["components/ListTodoItem.js","components/ListTodo.js","components/TodoAdd.js","hooks/useForm.js","components/todoReducer.js","components/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["ListTodoItem","handleDelete","handleToggle","todo","done","id","description","i","className","onClick","ListTodo","todos","map","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","type","placeholder","onChange","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","Id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79849d97.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ListTodoItem = ({\r\n  handleDelete,\r\n  handleToggle,\r\n  todo: { done, id, description },\r\n  i,\r\n}) => {\r\n  return (\r\n    <li\r\n      className=\"flex items-center justify-between mb-2 flex-col md:flex-row  border-b border-white p-4\"\r\n      key={id}\r\n    >\r\n      <p\r\n        className={`${\r\n          done && \"line-through\"\r\n        } text-lg capitalize cursor-pointer md:text-2xl text-center md:text-left`}\r\n        onClick={() => handleToggle(id)}\r\n      >\r\n        {i + 1}.{description}\r\n      </p>\r\n      <button\r\n        className=\"bg-green-600 px-2 py-1 text-white text-xl transtion duration-200 hover:bg-green-800 w-9/12 md:w-auto md:flex-grow-0 ml-1 md:ml-6 flex-shrink-0\"\r\n        onClick={() => handleDelete(id)}\r\n      >\r\n        Erase Task\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListTodoItem;\r\n","import React from \"react\";\r\nimport ListTodoItem from \"./ListTodoItem\";\r\n\r\nconst ListTodo = ({ todos, handleDelete, handleToggle }) => {\r\n  return (\r\n    <ul>\r\n      {todos.map((todo, i) => {\r\n        return (\r\n          <ListTodoItem\r\n            i={i}\r\n            todo={todo}\r\n            handleDelete={handleDelete}\r\n            handleToggle={handleToggle}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListTodo;\r\n","import React from \"react\";\r\nimport { useForm } from \"../hooks/useForm\";\r\n\r\nconst TodoAdd = ({ handleAddTodo }) => {\r\n  const [values, handleInputChange, reset] = useForm({\r\n    description: \"\",\r\n  });\r\n\r\n  const { description } = values;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (description.trim().length < 2) return;\r\n    const newTodo = {\r\n      id: new Date().getTime(),\r\n      description: description,\r\n      done: false,\r\n    };\r\n    handleAddTodo(newTodo);\r\n    reset();\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className=\"text-xl border-b border-white p-2\">Add Task</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"bg-gray-700 rounded mt-2 px-2 py-2 w-full\"\r\n          placeholder=\"Write a Task here...!\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={handleInputChange}\r\n        ></input>\r\n        <button className=\"text-base md:text-xl mt-2 bg-white transition duration-200 hover:bg-blue-600 border border-blue-600 text-blue-600 hover:text-white py-2 px-4 w-full \">\r\n          Add\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoAdd;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","export const todoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload];\r\n    case \"delete\":\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n    case \"toggle\":\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport ListTodo from \"./ListTodo\";\r\nimport TodoAdd from \"./TodoAdd\";\r\nimport { todoReducer } from \"./todoReducer\";\r\n\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem(\"todo\")) || [];\r\n};\r\n\r\nconst TodoApp = () => {\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todo\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const handleAddTodo = (newTodo) => {\r\n    dispatch({\r\n      type: \"add\",\r\n      payload: newTodo,\r\n    });\r\n  };\r\n\r\n  const handleDelete = (todoId) => {\r\n    dispatch({\r\n      type: \"delete\",\r\n      payload: todoId,\r\n    });\r\n  };\r\n\r\n  const handleToggle = (Id) => {\r\n    dispatch({\r\n      type: \"toggle\",\r\n      payload: Id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"p-2\">\r\n      <h1 className=\"text-5xl border-b border-white p-2 mb-4 font-semibold inline-block\">\r\n        Todo App\r\n      </h1>\r\n\r\n      <section className=\"grid grid-cols-1 md:grid-cols-12 \">\r\n        <div className=\"row-start-2 md:row-start-auto col-span-full md:col-span-7 border border-gray-300 p-2\">\r\n          <ListTodo\r\n            todos={todos}\r\n            handleDelete={handleDelete}\r\n            handleToggle={handleToggle}\r\n          />\r\n        </div>\r\n        <div className=\"row-start-1  md:row-start-auto col-span-full md:col-span-5 border border-gray-30 p-2\">\r\n          <TodoAdd handleAddTodo={handleAddTodo} />\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import React from \"react\";\nimport TodoApp from \"./components/TodoApp\";\n\nconst App = () => {\n  return <TodoApp />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}